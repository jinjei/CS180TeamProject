package UI;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.concurrent.ConcurrentHashMap;

import common.User;
import util.FileUtil;
import util.FrameUtil;

public class RegisterFrame {
    private JFrame frame;
    private JTextField nameField, usernameField, emailField;
    private JPasswordField passwordField;
    private JButton registerButton, uploadButton;
    private JPanel panel;

    public RegisterFrame(ConcurrentHashMap<String, User> users) {
        initializeUI();
        setupActionListeners();
    }

    private void initializeUI() {
        frame = new JFrame("Register New User");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());

        panel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;

        nameField = new JTextField(20);
        usernameField = new JTextField(20);
        passwordField = new JPasswordField(20);
        emailField = new JTextField(20);

        registerButton = new JButton("Register");
        uploadButton = new JButton("Upload Picture");
        applyTextFieldStyle(nameField);
        applyTextFieldStyle(usernameField);
        applyTextFieldStyle(passwordField);
        applyTextFieldStyle(emailField);

        styleButton(registerButton, new Color(152, 251, 152)); // Pastel green
        styleButton(uploadButton, new Color(255, 182, 193));   // Pastel pink

        // Adding components to the panel
        panel.add(new JLabel("Full Name:"), gbc);
        gbc.gridy++;
        panel.add(nameField, gbc);
        gbc.gridy++;
        panel.add(new JLabel("Username:"), gbc);
        gbc.gridy++;
        panel.add(usernameField, gbc);
        gbc.gridy++;
        panel.add(new JLabel("Password:"), gbc);
        gbc.gridy++;
        panel.add(passwordField, gbc);
        gbc.gridy++;
        panel.add(new JLabel("Email:"), gbc);
        gbc.gridy++;
        panel.add(emailField, gbc);
        gbc.gridy++;
        panel.add(registerButton, gbc);
        gbc.gridx++;
        panel.add(uploadButton, gbc);

        frame.add(panel, BorderLayout.CENTER);
        frame.pack();
        FrameUtil.center(frame);
        frame.setVisible(true);
    }

    private void setupActionListeners() {
        registerButton.addActionListener(this::registerAction);
        uploadButton.addActionListener(this::uploadAction);
    }

    private void registerAction(ActionEvent e) {
        JOptionPane.showMessageDialog(frame, "Registration Successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
    }

    private void uploadAction(ActionEvent e) {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(frame);
        if (result == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            JOptionPane.showMessageDialog(frame, "Profile Picture Updated Successfully: " + filePath, "Updated", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void applyTextFieldStyle(JTextField textField) {
        textField.setFont(new Font("Arial", Font.PLAIN, 16));
        textField.setBackground(new Color(245, 245, 245));  
        textField.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
    }

    private void styleButton(JButton button, Color bgColor) {
        button.setFont(new Font("Arial", Font.BOLD, 14));
        button.setBackground(bgColor);
        button.setOpaque(true);
        button.setBorderPainted(false);
        button.setFocusPainted(false);
    }

    public static void main(String[] args) {
        new RegisterFrame(FileUtil.getUsers());
    }
}
